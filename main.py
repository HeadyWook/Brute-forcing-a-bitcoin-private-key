#!/usr/bin/env python3

"""A Python program that uses 41 of 52 characters in a private key as shown on
https://tweetstamp.org/1340675592119857154/. The global variable "CYCLES" sets the number of whole private keys that
will be produced in the output. This program randomizes a string and appends it to the end of the partial private key to
produce 52 of 52 characters. The user can then copy and paste the whole private key in to a wallet to sweep. The sweep
can also be done by scanning a QR code. A QR code of the private key can be generated by pasting the raw text produced
by this program to a QR code generator, such as https://www.the-qrcode-generator.com/. If the correct private key is
produced then that user can claim the bitcoin on it. Good luck."""

# Import the random module.
import random

# Number of private keys to produce. This number can be changed and the total number of produced whole private keys will
# change accordingly.
CYCLES = 5

# A list of lowercase (i.e., abc...xyz) and uppercase (i.e., ABC...XYZ) letters and numbers (i.e., 0-9).
# Excludes "O", "0", "I", and "l".

CHARACTER_LIST = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',
                  'u', 'v', 'w', 'x', 'y', 'z',
                  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T',
                  'U', 'V', 'W', 'X', 'Y', 'Z',
                  '1', '2', '3', '4', '5', '6', '7', '8', '9']

# The partial private key.
PARTIAL_PRIVATE_KEY = "L1MQJDce6jAsB5x4bqau2TKCBkWUnSJR7VHCZsnmb"

# Empty list
MISSING_CHARACTERS = []


# Generate 11 random characters, append them to the empty MISSING_CHARACTERS list, and return it.
def randomize_list():
    while True:
        # Get random choice from CHARACTER_LIST and append it to MISSING_CHARACTERS list.
        random_character = random.choice(CHARACTER_LIST)
        MISSING_CHARACTERS.append(random_character)

        # Stop loop when 11 characters are produced.
        if len(MISSING_CHARACTERS) == 11:
            break
    return MISSING_CHARACTERS


# Convert the MISSING_CHARACTERS list to a string and append it to the partial private key.
def show_results(missing_characters_list):
    # An empty string
    missing_characters_string = ""
    # Loop through the 11 random characters in the list and append them to missing_characters_string.
    for character in missing_characters_list:
        missing_characters_string += character
        # Append the missing_characters_string to the PARTIAL_PRIVATE_KEY and print the result.
    print(PARTIAL_PRIVATE_KEY + missing_characters_string)


# Run the randomize_list function and set the returned value to missing_characters variable. Pass that variable to the
# show_results function and run it.
def start_randomizer():
    missing_characters = randomize_list()
    show_results(missing_characters)


# Repeat the start_randomizer function until the number of CYCLES is met.
def cycle():
    count = 0
    while True:
        start_randomizer()
        # Clear the MISSING_CHARACTERS list.
        MISSING_CHARACTERS.clear()
        count += 1
        if count == CYCLES:
            break


# The main program.
def main():
    cycle()


if __name__ == "__main__":
    main()
